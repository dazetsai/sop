//基础知识
?><head><title>绘图基础知识</title></head><body style="font:15px/21px 'Microsoft YaHei'; color: #222;"><pre>
对于绘图大致了解一些基础的概念就可以。
学习 aardio 并不是一定要深入学习这些内容，大多时候不需要自己绘图。
觉得难可以绕过。如果对这些技术有兴趣，GDI，GDI+ 的资料在网络上非常多，不会找不到。
aardio 也不可能把所有的资料都搬进来，也没有这个必要。

plus 控件的源码是极好的范例，但一般用户不需要完全看懂源码，会用就行。
如果想要的太多，又不想付出超出他人的努力，这并没有错，只不过需要换个编程语言才有可能。

▶ 绘图接口
——————————————————————————————————————————————————————————————
1、GDI(Graphics Device Interface) 
GDI 是基础的绘图接口。
标准库 gdi 用于 GDI 绘图操作。
传统的窗口控件默认使用 GDI 绘图。

2、GDI+
GDI+ 是新版绘图接口，扩展了 GDI 的功能。
标准库 gdip 用于 GDI+ 绘图操作。
plus 控件基于 gdip（GDI+）。
GDI+ 参考手册: https://download.aardio.com/doc/gdip.chm

▶ 图像
——————————————————————————————————————————————————————————————
1、GDI 位图
GDI 位图与图标与其他系统资源一样通过句柄操作，句柄是一个指针类型的值。 
使用位图句柄要仔细查看相关函数的文档，了解什么时候需要手动释放位图。
可使用 ::DeleteObject(hBmp) 释放位图（参数 hBmp 为位图句柄）。
	
2、com.picture 对象	
com.picture 可加载 JPG,GIF,BMP 等图像， 
调用 com.picture 对象的 CopyHandle() 函数可以复制位图并返回位图句柄。 
调用 com.picture.fromBitmap() 函数可将位图句柄转换为 com.picture 对象。
picturebox 控件使用 com.picture 加载图像并获取位图句柄。
因为有更强大的 plus 控件，picturebox 控件基本是多余的。
	
3、gdip.bitmap 对象
gdip.bitmap 用于创建GDI+ 位图对象。
可用于加载常用图像格式,例如 JPG,GIF,BMP，并且支持 PNG。
调用 gdip.bitmap 对象的 copyHandle() 函数可以复制位图并返回位图句柄。 
调用 gdip.bitmap 构造函数可将参数 @1 指定的位图句柄转换为 gdip.bitmap 对象。
调用 gdip.bitmap 构造函数可将参数 @1 指定的 com.picture 对象转换为 gdip.bitmap 对象。

实际上 aardio 程序用得最多的是 GDI+ 与 plus 控件，绘图范例也主要是使用 GDI+。
除了操作剪贴板之类传统接口，很少需要 gdip.bitmap、com.picture、位图句柄相互转换的操作。

▶ 颜色格式
——————————————————————————————————————————————————————————————
1、用于 GDI 的 RGB 格式
RGB 颜色可用 6 位 16 进制数值 0xBBGGRR 表示。
BB 表示蓝色（blue）分量，GG 表示绿色（green)分量，RR 表示红色(red)分量。

例如 0xFF0000 表示蓝色。
	
2、用于 GDI+ 的 ARGB 格式
ARGB 颜色可用 8 位 16 进制数值 0xAARRGGBB 表示。
AA 表示透明度，其他表示 RGB 分量。

例如 0xFFFF0000 表示不透明红色。

3、字符串格式
gdi.colorParse() 函数可解析网页兼容的、用字符串表示的颜色代码。
支持 #RGB、#RRGGBB、#RRGGBBAA 三种格式，#号可省略。

#RGB、#RRGGBB 返回 GDI 兼容的 RGB 值。
#RRGGBBAA 返回 GDI+ 兼容的 ARGB 格式颜色值。
<script>external.hitMax();</script>